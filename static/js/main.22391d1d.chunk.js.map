{"version":3,"sources":["TextBucks.tsx","elements/form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TextBucks","props","useState","count","setCount","onClick","Form","state","value","handleChange","bind","handleSubmit","e","this","setState","target","console","log","preventDefault","onSubmit","type","name","onChange","React","Component","isValid","specLimit","Upper","Lower","App","mySpecs","setMySpecs","className","style","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAeeA,MAZf,SAAmBC,GAAa,IAAD,EACDC,mBAASD,GADR,mBACpBE,EADoB,KACbC,EADa,KAE3B,OACA,qCACI,4BAAID,IACJ,wBAAQE,QAAS,kBAAMD,EAASD,EAAQ,IAAxC,0B,2CC8BOG,E,kDAlCX,WAAYL,GAAa,IAAD,8BACpB,cAAMA,IACDM,MAAQ,CAACC,MAAO,IAErB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALA,E,gDAQxB,SAAaE,GACTC,KAAKC,SAAS,CAACN,MAAOI,EAAEG,OAAOP,U,0BAGnC,SAAaI,GACTI,QAAQC,IAAIJ,KAAKN,OACjBK,EAAEM,mB,oBAIN,WACI,OACI,uBAAMC,SAAUN,KAAKF,aAArB,UACI,0CAEI,uBAAOS,KAAK,OAAOC,KAAK,OACpBC,SAAUT,KAAKJ,kBAEvB,uBAAOW,KAAK,SAASZ,MAAM,kB,GA3BxBe,IAAMC,WCuCzB,SAASC,EAAQC,GAaf,OAVGA,EAAUC,MAAQ,GACb,QAECD,EAAUE,MAAQ,EACnB,UAGA,OAOKC,MApDf,WAAgB,IAAD,EACa3B,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,CACrCyB,MAAO,EACPC,MAAO,IAJI,mBAENE,EAFM,KAEGC,EAFH,KAOb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mBAAGA,UAAS,WAAMP,EAAQK,GAAd,KAAZ,SAAwC3B,IACxC,wBAAQE,QAAS,WACfD,EAASD,EAAQ,GACjB4B,EAAW,CAACJ,MAAOxB,EAAOyB,MAAOzB,KAFnC,sBAMA,oBAAI8B,MAAO,CACTC,MAAO,OAERlC,EAAUG,GACX,oBAAI8B,MAAO,CACTC,MAAO,OAET,cAAC,EAAD,UCjBOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22391d1d.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport React from 'react';\r\n\r\nfunction TextBucks(props: any) {\r\n    const [count, setCount] = useState(props);\r\n    return (\r\n    <>\r\n        <p>{count}</p>\r\n        <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n        </button>\r\n    </>\r\n    );\r\n    //return <h1>Hello, {props}</h1>;\r\n}\r\nexport default TextBucks;","import React from 'react';\r\n\r\n\r\nclass Form extends React.Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({value: e.target.value });\r\n    }\r\n\r\n    handleSubmit(e: React.SyntheticEvent) {\r\n        console.log(this.state);\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name:\r\n                    <input type=\"text\" name=\"name\"\r\n                        onChange={this.handleChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Form;","import './App.css';\nimport TextBucks from './TextBucks';\nimport { useState } from 'react';\nimport './styles/validation.css';\nimport Form from './elements/form';\n\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [mySpecs, setMySpecs] = useState({\n    Upper: 0, \n    Lower: 0\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className={` ${isValid(mySpecs)} `}>{count}</p>\n        <button onClick={() => {\n          setCount(count + 1)\n          setMySpecs({Upper: count, Lower: count })\n        }}>\n        Click me\n        </button>\n        <hr style={{\n          width: 100\n        }}/>\n        {TextBucks(count)}\n        <hr style={{\n          width: 100\n        }}/>\n        <Form />\n      </header>\n    </div>\n  );\n}\n\ninterface SpecLimit {\n  Upper: number;\n  Lower: number;\n}\n\nfunction isValid(specLimit: SpecLimit) : string\n{\n  let ret: string;\n  if(specLimit.Upper > 10) {\n    ret = \"error\";\n  }\n  else if (specLimit.Lower < 5) {\n    ret = \"warning\";\n  }\n  else {\n    ret = \"good\";\n  }\n\n  return ret;\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}